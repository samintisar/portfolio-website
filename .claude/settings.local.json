{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(source:*)",
      "Bash(find:*)",
      "Bash(mv:*)",
      "Bash(mkdir:*)",
      "Bash(tree:*)",
      "Bash(touch:*)",
      "Bash(cat:*)",
      "Bash(cp:*)",
      "Bash(npm:*)",
      "Bash(npx:*)",
      "Bash(yarn:*)",
      "Bash(pnpm:*)",
      "Bash(node:*)",
      "Bash(tsx:*)",
      "Bash(tsc:*)",
      "Bash(eslint:*)",
      "Bash(prettier:*)",
      "Bash(vitest:*)",
      "Bash(playwright:*)",
      "Bash(next:*)",
      "Bash(git:*)",
      "Bash(cd:*)",
      "Bash(pwd:*)",
      "Bash(task-master:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:nextjs.org)",
      "WebFetch(domain:react.dev)",
      "WebFetch(domain:typescript-eslint.io)",
      "WebFetch(domain:tailwindcss.com)",
      "WebFetch(domain:ui.shadcn.com)",
      "WebFetch(domain:zod.dev)",
      "WebFetch(domain:vitest.dev)",
      "WebFetch(domain:playwright.dev)",
      "WebFetch(domain:supabase.com)",
      "WebFetch(domain:vercel.com)",
      "WebFetch(domain:npmjs.com)",
      "mcp__playwright",
      "mcp__Ref",
      "WebSearch",
      "Bash(sed:*)",
      "Bash(chmod:*)",
      "Bash(powershell:*)",
      "Bash(timeout:*)",
      "WebFetch(domain:platform.openai.com)",
      "WebFetch(domain:js.langchain.com)",
      "WebFetch(domain:www.npmjs.com)",
      "mcp__playwright",
      "Bash(curl:*)",
      "WebFetch(domain:mswjs.io)",
      "WebFetch(domain:testing-library.com)",
      "Bash(dir)",
      "Bash(echo:*)",
      "Bash(DEBUG_TESTS=true npm test -- tests/unit/server/services/ingestion/pipeline/02_parse.test.ts --reporter=verbose)",
      "Bash(netstat:*)",
      "Bash(docker-compose build:*)",
      "Bash(docker build:*)",
      "Bash(docker-compose:*)",
      "Bash(docker run:*)",
      "Bash(.specify/scripts/powershell/setup-plan.ps1 -Json)",
      "Bash(.specify/scripts/powershell/check-task-prerequisites.ps1 -Json)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "playwright"
  ]
}